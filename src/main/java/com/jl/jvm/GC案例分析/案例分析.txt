1 集群间数据同步导致内存溢出

问题：6个节点的服务要实现部分数据在集群间同步，起初放在数据库，但是数据库读写竞争过于激烈，性能很不好
解决：使用全局缓存但是出现不定期内存溢出的情况，服务内存回收正常
问题排查:
    添加参数：-XX:+HeapDumpOnOutOfMemoryError运行
    因为有信息发送失败需要重发，所以需要信息需要在内存中保留；服务使用过程中一个页面好几个请求，各节点交互频繁，当网络不能满足同步数据速度，则会造成数据堆积，产生内存溢出
结论：
    所以使用该缓存适用于读多写少的场景，过多的写操作会造成很大的网络同步开销


2 堆外内存导致内存溢出
问题：2G 32位 堆内存分配1.6G ，jstat监控指标正常，不停抛出内存溢出异常；添加参数：-XX:+HeapDumpOnOutOfMemoryError无任何反应，加大堆内存，异常更频繁
问题排查:
    看系统内存溢出日志，看到有DirectByteBuffer，所以需要关注直接内存回收的问题


3 外部命令导致系统缓慢
问题： CPU占用率很高，但是并不是应用系统本身
问题排查：
    Dtrace排除，系统fork新的进程导致，java可以通过Runtime.getRuntime().exec()执行shell脚本，频繁调用会不停创建新的进程去执行shell脚本
问题解决：
    将该命令获取参数替换成java的API即可


4 服务JVM进程崩溃
问题：2CPU 8G内存，运行一段时间出现虚拟机进程自动关闭，崩溃前日志发生了大量的connect reset异常(远程连接断开异常)
问题排查：
    系统做了待办任务后需要同步到OA系统，但是OA的接口响应非常慢，长达3分钟才能返回，且出现连接中断
解决思路：
    系统为了不被OA拖累，做了异步处理，但是因为OA过于慢，待办任务推送频繁，导致等待的线程和socket连接越来越多，超过JVM承受能力，导致崩溃，修复OA的集成接口，并改成生产者消费者模型


5 window的虚拟内存导致长时间的停顿,桌面应用;最小化的时候，资源管理器占用内存大幅度减小，但虚拟内存则变化不大
问题排查：两个参数 -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -Xloggc:gclog.log(指定GC log的位置，以文件输出)
解决思路：-Dsun.awt.keepWorkingSetOnMinimize=true // 最小化的时候工作内存不再自动交换的磁盘页面文件中


6 eclipse的调优实战
-Xverify:none 禁止掉字节码的验证过程
-XX:+DisableExplicitGC 屏蔽掉System.gc();
















